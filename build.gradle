buildscript {
    apply from: 'config.gradle'

    dependencies {
        classpath "com.google.dagger:hilt-android-gradle-plugin:$versions.hilt"
    }
}// Top-level build file where you can add configuration options common to all sub-projects/modules.
plugins {
    id 'com.android.application' version '7.3.0' apply false
    id 'com.android.library' version '7.3.0' apply false
    id 'org.jetbrains.kotlin.android' version '1.7.10' apply false
    id 'org.jetbrains.kotlin.jvm' version '1.7.10' apply false
    id 'com.google.dagger.hilt.android' version '2.44' apply false
    id "io.gitlab.arturbosch.detekt" version "1.22.0-RC1"
}

//detekt {
//    toolVersion = "1.22.0-RC1"
//    buildUponDefaultConfig = true // preconfigure defaults
//    allRules = false // activate all available (even unstable) rules.
//    config = files("$projectDir/config/detekt/detekt.yml") // point to your custom config defining rules to run, overwriting default behavior
////    baseline = file("$projectDir/config/baseline.xml") // a way of suppressing issues before introducing detekt
//}

def projectSource = file(projectDir)
def configFile = files("$rootDir/config/detekt/detekt.yml")
//def baselineFile = file("$rootDir/config/detekt/baseline.xml")
def kotlinFiles = "**/*.kt"
def javaFiles = "**/*.java"
def resourceFiles = "**/resources/**"
def buildFiles = "**/build/**"

tasks.register("detektAll", io.gitlab.arturbosch.detekt.Detekt) {
    def autoFix = project.hasProperty('detektAutoFix')

    description = "Custom DETEKT build for all modules"
    parallel = true
    ignoreFailures = false
    autoCorrect = autoFix
    buildUponDefaultConfig = true
    setSource(projectSource)
//    baseline.set(baselineFile)
    config.setFrom(configFile)
    include(kotlinFiles)
    exclude(javaFiles,resourceFiles, buildFiles)
    reports {
        html.enabled = true
        xml.enabled = false
        txt.enabled = false
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}